<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.eleme.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.example.eleme.pojo.Order">
    <id column="key" jdbcType="INTEGER" property="key" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="goodsId" jdbcType="INTEGER" property="goodsId" />
    <result column="state" jdbcType="CHAR" property="state" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="storeId" jdbcType="VARCHAR" property="storeId" />
    <result column="sumPrice" jdbcType="REAL" property="sumPrice" />
    <result column="order_id" jdbcType="VARCHAR" property="order_id" />
  </resultMap>
  <sql id="Base_Column_List">
    key, createTime, userId, goodsId, state, price, count, storeId, sumPrice, order_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_info,
    where key = #{key,jdbcType=INTEGER}
  </select>
   <select id="queryOrdersByUser" parameterType="java.lang.Integer"  resultType="com.example.eleme.pojo.HistoryOrder">
    select 
    A.createTime,A.state,A.price,A.count,A.sumPrice,A.order_id,B.name as goodName,B.icon as goodImg,C.name as StoreName,C.avatar as StoreImg
    from order_info as A,goods as B, store_info as C
    where userId = #{userId,jdbcType=INTEGER}
    and A.goodsId = B.id
    and A.storeId = C.shopid
    order by A.createTime desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_info
    where key = #{key,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.eleme.pojo.Order">
    insert into order_info (key, createTime, userId, 
      goodsId, state, price, count, 
      storeId, sumPrice, order_id
      )
    values (#{key,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, 
      #{goodsId,jdbcType=INTEGER}, #{state,jdbcType=CHAR}, #{price,jdbcType=REAL}, #{count,jdbcType=INTEGER}, 
      #{storeId,jdbcType=VARCHAR}, #{sumPrice,jdbcType=REAL}, #{order_id,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.eleme.pojo.Order">
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="key != null">
        key,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="goodsId != null">
        goodsId,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="storeId != null">
        storeId,
      </if>
      <if test="sumPrice != null">
        sumPrice,
      </if>
      <if test="order_id != null">
        order_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="key != null">
        #{key,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=CHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=VARCHAR},
      </if>
      <if test="sumPrice != null">
        #{sumPrice,jdbcType=REAL},
      </if>
      <if test="order_id != null">
        #{order_id,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.eleme.pojo.Order">
    update order_info
    <set>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goodsId = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=CHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        storeId = #{storeId,jdbcType=VARCHAR},
      </if>
      <if test="sumPrice != null">
        sumPrice = #{sumPrice,jdbcType=REAL},
      </if>
      <if test="order_id != null">
        order_id = #{order_id,jdbcType=VARCHAR},
      </if>
    </set>
    where key = #{key,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.eleme.pojo.Order">
    update order_info
    set createTime = #{createTime,jdbcType=TIMESTAMP},
      userId = #{userId,jdbcType=INTEGER},
      goodsId = #{goodsId,jdbcType=INTEGER},
      state = #{state,jdbcType=CHAR},
      price = #{price,jdbcType=REAL},
      count = #{count,jdbcType=INTEGER},
      storeId = #{storeId,jdbcType=VARCHAR},
      sumPrice = #{sumPrice,jdbcType=REAL},
      order_id = #{order_id,jdbcType=VARCHAR}
    where key = #{key,jdbcType=INTEGER}
  </update>
   <update id="updateByOrderId" parameterType="map">
    update order_info
    set state = #{stateString,jdbcType=CHAR}   
    where order_id = #{orderId,jdbcType=VARCHAR}
  </update>
</mapper>