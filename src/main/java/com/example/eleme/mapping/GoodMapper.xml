<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.eleme.dao.GoodMapper">
  <resultMap id="BaseResultMap" type="com.example.eleme.pojo.Good">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="storeid" jdbcType="VARCHAR" property="storeid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="price" jdbcType="REAL" property="price" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="sellcount" jdbcType="INTEGER" property="sellcount" />
    <result column="type" jdbcType="CHAR" property="type" />
  </resultMap>
  <sql id="Base_Column_List">
    id, storeid, name, price, icon, description, sellcount, type
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.eleme.pojo.Good">
    insert into goods (id, storeid, name, 
      price, icon, description, 
      sellcount, type)
    values (#{id,jdbcType=INTEGER}, #{storeid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{price,jdbcType=REAL}, #{icon,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{sellcount,jdbcType=INTEGER}, #{type,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.eleme.pojo.Good">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="storeid != null">
        storeid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="sellcount != null">
        sellcount,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="storeid != null">
        #{storeid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=REAL},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="sellcount != null">
        #{sellcount,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.eleme.pojo.Good">
    update goods
    <set>
      <if test="storeid != null">
        storeid = #{storeid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=REAL},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="sellcount != null">
        sellcount = #{sellcount,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.eleme.pojo.Good">
    update goods
    set storeid = #{storeid,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      icon = #{icon,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      sellcount = #{sellcount,jdbcType=INTEGER},
      type = #{type,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByshopId" parameterType="java.lang.String" resultMap="BaseResultMap">
	select
	<include refid="Base_Column_List" />
	from goods
	where storeid = #{storeid,jdbcType=VARCHAR}
</select>
</mapper>